version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mallyproj_postgres
    environment:
      POSTGRES_DB: mallyproj_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${PGPASSWORD:-mallyproj123}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/complete-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed-data.sql:/docker-entrypoint-initdb.d/02-seed.sql
    ports:
      - "5432:5432"
    networks:
      - mallyproj_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: mallyproj_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mallyproj_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mallyproj_app
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${PGPASSWORD:-mallyproj123}@postgres:5432/mallyproj_db
      REDIS_URL: redis://redis:6379
      PORT: 5000
      SESSION_SECRET: ${SESSION_SECRET:-your_super_secret_session_key}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - mallyproj_network
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: mallyproj_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - mallyproj_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  mallyproj_network:
    driver: bridge